# Query 1 - Return all unique affiliations.
PREFIX aida35kschema: <http://aida.kmi.open.ac.uk/aida35k/ontology#>
select distinct ?o where { 
	?s 	aida35kschema:hasAffiliation ?o .
}
# Query 2 - Return all distinct CSO topics.
PREFIX aida35kschema: <http://aida.kmi.open.ac.uk/aida35k/ontology#>
select distinct ?o where { 
	?s 	aida35kschema:hasCsoEnhancedTopic ?o .
}

# Query 3 - Return TOP 10 Topics CSO with its count and name
PREFIX aida35kschema: <http://aida.kmi.open.ac.uk/aida35k/ontology#>
select ?topic (count(?paper) as ?numberOfPapers) ?name where { 
    ?topic aida35kschema:hasJourName ?name .
	?topic 	aida35kschema:hasCsoEnhancedTopic ?paper .
} GROUP BY ?topic ?name ORDER BY DESC(?numberOfPapers) LIMIT 10


# Query 4 - papers of the conference series ‘iswc’, count their references (citations), 
# and present them in decrease order of their count.
PREFIX aida35kschema: <http://aida.kmi.open.ac.uk/aida35k/ontology#>
select (?s as ?paper) ?conf (count(?ref) as ?numberOfRefs) where { 
	?s 	aida35kschema:hasConfName ?conf .
    ?s aida35kschema:hasReference ?ref .
    filter contains(?conf,"iswc") .  
} GROUP BY ?s ?conf ORDER BY DESC(?NumberOfRefs)


# Query 5 - Find all authors that have an Affiliation with ULB, and present them along with their papers.
PREFIX aida35kschema: <http://aida.kmi.open.ac.uk/aida35k/ontology#>
select ?author ?paper ?affiliation where {
    ?author aida35kschema:hasPaper ?paper .
    ?paper aida35kschema:hasAffiliationDistribution ?ad .
    ?ad aida35kschema:hasAffiliation ?affiliation .
    filter contains(?affiliation,"bruxelles") .
}

# Query 6 - get abstract for the paper
PREFIX aida35kschema: <http://aida.kmi.open.ac.uk/aida35k/ontology#>
PREFIX ns4: <http://purl.org/dc/terms/>
select ?abstract where { 
    SERVICE <https://makg.org/sparql> { 
    <https://makg.org/entity/1642143707> ns4:abstract ?abstract } 
}

# Query 7